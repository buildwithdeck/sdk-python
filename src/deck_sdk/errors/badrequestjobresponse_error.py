"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from deck_sdk.errors import DeckSDKError
from deck_sdk.models import errorcodeenum as models_errorcodeenum
from deck_sdk.types import BaseModel
import httpx
import pydantic
from typing import Optional
from typing_extensions import Annotated


class BadRequestJobResponseErrorData(BaseModel):
    error_code: models_errorcodeenum.ErrorCodeEnum
    r"""A predefined error code indicating the specific reason for the failure."""

    error_message: str
    r"""A human-readable error message indicating the job is already in progress."""

    message: Annotated[
        Optional[str],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ] = None
    r"""[Obsolete] Legacy message describing the conflict. Use ErrorMessage instead."""


class BadRequestJobResponseError(DeckSDKError):
    data: BadRequestJobResponseErrorData

    def __init__(
        self,
        data: BadRequestJobResponseErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data

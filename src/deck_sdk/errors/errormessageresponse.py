"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from deck_sdk.errors import DeckSDKError
from deck_sdk.models import (
    errorcategoryenum as models_errorcategoryenum,
    errorcodeenum as models_errorcodeenum,
)
from deck_sdk.types import BaseModel, OptionalNullable, UNSET
import httpx
from typing import Optional


class ErrorMessageResponseData(BaseModel):
    error_category: Optional[models_errorcategoryenum.ErrorCategoryEnum] = None
    r"""A broad categorization of the error. Safe for programmatic use."""

    error_code: Optional[models_errorcodeenum.ErrorCodeEnum] = None
    r"""The particular error code. Safe for programmatic use."""

    error_message: Optional[str] = None
    r"""A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use."""

    display_message: OptionalNullable[str] = UNSET
    r"""A user-friendly representation of the error code. null if the error is not related to user action. This may change over time and is not safe for programmatic use."""


class ErrorMessageResponse(DeckSDKError):
    data: ErrorMessageResponseData

    def __init__(
        self,
        data: ErrorMessageResponseData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
